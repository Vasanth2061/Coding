Given an integer n, return the least number of perfect square numbers that sum to n.

A perfect square is an integer that is the square of an integer; in other words, it is the product of some integer with itself. For example, 1, 4, 9, and 16 are perfect squares while 3 and 11 are not.

 

Example 1:

Input: n = 12
Output: 3
Explanation: 12 = 4 + 4 + 4.
Example 2:

Input: n = 13
Output: 2
Explanation: 13 = 4 + 9.
 

Constraints:

1 <= n <= 104

class Solution {
public:
    int solve(int n,vector<int> &dp){
        if(n<=0)
            return 0;
        if(dp[n]!=-1)
            return dp[n];
        int min_count=INT_MAX,count=0;
        for(int i=1;i*i<=n;i++){
            count=1+solve(n-i*i,dp);
            min_count=min(min_count,count);
        }
        dp[n]=min_count;
        return dp[n];
    }
    int numSquares(int n) {
        vector<int> dp(n+1,-1); 
        int count=0;
        return solve(n,dp);
    }
};
