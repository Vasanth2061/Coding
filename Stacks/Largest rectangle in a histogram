Given an array of integers heights representing the histogram's bar height where the width of each bar is 1, return the area of the largest rectangle in the histogram.

 

Example 1:


Input: heights = [2,1,5,6,2,3]
Output: 10
Explanation: The above is a histogram where width of each bar is 1.
The largest rectangle is shown in the red area, which has an area = 10 units.
Example 2:


Input: heights = [2,4]
Output: 4
 

Constraints:

1 <= heights.length <= 105
0 <= heights[i] <= 104

class Solution {
public:
    int largestRectangleArea(vector<int>& nums) {
        int n=nums.size();
        stack<int> st1,st2;
        vector<int> v1(n,0),v2(n,n-1);
        st1.push(0);
        v1[0]=0;
        for(int i=1;i<n;i++){
            while(!st1.empty() and nums[st1.top()]>=nums[i])
            st1.pop();
            if(st1.empty()){
            v1[i]=0;
            st1.push(i);
            }
            else{
            v1[i]=st1.top()+1;
            st1.push(i);
            }
        }
        st2.push(n-1);
        v2[n-1]=n-1;
        for(int i=n-2;i>=0;i--){
            while(!st2.empty() and nums[st2.top()]>=nums[i])
            st2.pop();
            if(st2.empty()){
            st2.push(i);
            }
            else
            {
            v2[i]=st2.top()-1;
            st2.push(i);
            }
        }
        int maxi=0;
        for(int i=0;i<n;i++){
        maxi=max(maxi,(v2[i]-v1[i]+1)*nums[i]);
        }

        return maxi;
    }
};
