Given a string s, return the longest palindromic substring in s.

Example 1:

Input: s = "babad"
Output: "bab"
Explanation: "aba" is also a valid answer.
Example 2:

Input: s = "cbbd"
Output: "bb"
 

Constraints:

1 <= s.length <= 1000
s consist of only digits and English letters.

class Solution {
public:
    string longestPalindrome(string s) {
        int l=0;
        int r=0;
        int n=s.size();
        string ans;
        int maxi=INT_MIN;
        for(int i=0;i<n;i++){
            l=i;
            r=i;
            while(l>=0 and r<n and s[l]==s[r]){
            l--;
            r++;
            }
            if(r-l-1>maxi){
                maxi=r-l-1;
                ans=s.substr(l+1,r-l-1);
            }
        }
        for(int i=0;i<n;i++){
            l=i;
            r=i+1;
            while(l>=0 and r<n and s[l]==s[r]){
            l--;
            r++;
            }
            if(r-l-1>maxi){
                maxi=r-l-1;
                ans=s.substr(l+1,r-l-1);
            }
        }
        return ans;
    }
};
